version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: toy-pipeline-postgres
    environment:
      POSTGRES_DB: toy_pipeline
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - toy-pipeline-network

  # Redis for caching and message queue
  redis:
    image: redis:7-alpine
    container_name: toy-pipeline-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - toy-pipeline-network

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: toy-pipeline-backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/toy_pipeline
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-this-in-production
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./shared:/app/shared
    depends_on:
      - postgres
      - redis
    networks:
      - toy-pipeline-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: toy-pipeline-worker
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/toy_pipeline
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-this-in-production
    volumes:
      - ./backend:/app
      - ./shared:/app/shared
    depends_on:
      - postgres
      - redis
    networks:
      - toy-pipeline-network
    command: celery -A app.celery_app worker --loglevel=info

  # Celery Flower (Task monitoring)
  celery-flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: toy-pipeline-flower
    environment:
      - REDIS_URL=redis://redis:6379
    ports:
      - "5555:5555"
    volumes:
      - ./backend:/app
    depends_on:
      - redis
    networks:
      - toy-pipeline-network
    command: celery -A app.celery_app flower --port=5555

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: toy-pipeline-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - ./shared:/app/shared
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
    networks:
      - toy-pipeline-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  toy-pipeline-network:
    driver: bridge
